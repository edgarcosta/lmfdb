
Adding new fields to the lmfdb involves computing more data for them,
managing labels, and then importing them.

Warning: the programs here rely on access to the local database in file form
         as well as functions in (my) gp and magma init files, and an exterior
         program used to connect magma to gp

Fields are represented in the form [polynomial in x, [list of ramified primes]]
Polynomials should always be run through polredabs first

To add new fields, we only process fields of a given degree one at a time
  - optionally, dump existing fields by running dump_alldeg.py which creates
    files p-alldeg-n where 1<n<48. Then remove any existing fields from your
    list (so save the time it takes to reprocess them)
  - run them through gp with prep.gp.  The main function is doall1 which is
    takes as input a list of pairs [polynomial in x, [list of ramfied primes]]
    Save the result in a file, referred to below as newstuff.prep
  - dump labels with python using dump-label-data.py which dumps files 
    called label-data-k where k is the degree.  This command takes as an 
    optional argument a list of degrees to dump, otherwise it does them all
  - make labels for the new ones (here k is the degree of the fields)
      make-labels.py label-data-k newstuff.prep
    which creates the file newstuff.prep.out
    This command also fills in some fields to make the import step easier
  - add the new stuff with
      import_nf_data-new.py newstuff.prep.out

